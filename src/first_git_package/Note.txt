*****GIT DAY1*****
1. Create a project
2. Create a GITHUB REPOSITORY
    *go to github
    *Repositories>Create New Repository> first_git_project
3. Create a FIRST COMMIT for the First time
ONLY ONCE    *git init
EVERY TIME    *git add .
EVERY TIME    *git commit -m "first commit"
ONLY ONCE    *git branch -M main
ONLY ONCE    *git remote add origin https://github.com/abayramus/first_git_project.git
ONLY ONCE    *git push -u origin main
    *****Then your code should be pushed to github. REFRESH YOUR PAGE TO SEE THE CODE

NOTE: git status    ->   This is our friend. This can be used anytime to see the progress

4. Create a new SECOND COMMIT
    *Create a new java class under first_git_package: MySecondClass
    *Create a new commit and push the code to github
        * git add .
        * git commit -m "added my second java class"
        * git push


5. ADDING SPECIFIC FILES
    *Create 2 JAVA classes : MyThirdClass, MyFourthClass
    *Create a commit with ONLY myFourthClass
        *git add "src/first_git_package/MyFourthClass.java"
        *git commit -m "adding fourth class"
        *git push


6. GIT PULL
    *git pull is used to get the code from github
    *git pull = git fetch + git merge
        NOTE: if git pull trows error then use:
        git fetch
        git merge
    * NOW THAT WE HAVE OUR LOCAL UPDATED, THEN COMMIT THE CODES AND PUSH ALL TOGETHER
        *git add .
        *git commit -m "committing my codes"
        *git push
NOTE: PULL BEFORE PUSH
        *git pull -> git add . -> git commit -m "message" -> git push

**********************DAY 1 SUMMARY***********************************
*****Prerequisites :
*Git Install
*GitHub account
*Git Authentication(create token, add username and token so your account verification is complete)
*****First Time Git Push*****
*FOLLOW THE INSTRUCTION IN OUR GITHUB REPOSITORY
    git init
    git add .
    git commit -m "first commit"
    git branch -M main
    git remote add origin https://github.com/abayramus/demo-repo.git
    git push -u origin main
*NOTE : If you get error, just google the error message,...

*****Second Time Git Push*****
    git add .
    git commit -m "any message"
    git push

****GIT PULL
    git pull gets latest github code in our local
    git pull = git fetch + git merge

****CONFLICT
    When we try to merge the code that are in the - SAME spot with DIFFERENT codes -
****How to Resolve conflict?
    Manually fix : remove the illegal characters(error message)
    create a new commit(add, commit)
    then push
****To minimize conflict, we can clone the project, add our new code quickly, then commit then push
    git clone https://github.com/abayramus/first_git_project.git
    add your new codes
    git add .
    git commit -m
    git push
********************DAY 2*****************************************************
BRANCHING
git branch -a -> show me all branch
git branch ahmet -> create ahmet branch
git checkout ahmet -> switched to ahmet branch
created a code : MySixthClass
create a new commit and push
    git add .
    git commit -m "message"
    git push --set-upstream origin ahmet
Then codes will be in the remote ahmet branch

***One more side branch flow
   Create a class " MySeventhClass"
   create a new commit and push
     git add .
     git commit -m "message"
     git push
   Then new codes will be in remote ahmet branch
   Then in github expert or us will do:
       Pull Request(PR)(US or Expert)
       Then Code Review(Expert)
       Then Code Merge(Expert)













